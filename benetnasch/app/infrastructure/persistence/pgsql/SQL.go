package pgsql

const (
	// article
	ListTopAndFeaturedArticles = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, create_time, update_time FROM t_article) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id where a.is_delete = 0 and a.status in (1, 2) order by is_top desc, is_featured desc"
	ArticleTags                = "SELECT t.tag_name FROM t_article a LEFT JOIN t_article_tag at ON a.id = at.article_id LEFT JOIN t_tag t ON t.id = at.tag_id WHERE a.id = %d"
	ListArticles               = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, create_time, update_time FROM t_article where is_delete = 0 and status in (1, 2) order by id desc LIMIT %d offset %d) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id"
	GetArticlesByCategoryId    = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, create_time, update_time FROM t_article where category_id = %d and is_delete = 0 and status in (1, 2) order by id desc LIMIT %d offset %d) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id"
	GetArticleById             = "SELECT a.id AS id, article_cover, article_title, article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website, type, original_url FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, type, original_url, create_time, update_time FROM t_article where id = %d and is_delete = 0 and status in (1, 2)) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id"
	GetPreArticleById          = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, create_time, update_time FROM t_article where id < %d and is_delete = 0 and status in (1, 2) order by id desc limit 1 offset 0) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id"
	GetNextArticleById         = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, create_time, update_time FROM t_article where id > %d and is_delete = 0 and status in (1, 2) order by id limit 1 offset 0) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id"
	GetFirstArticle            = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, create_time, update_time FROM t_article where is_delete = 0 and status in (1, 2) order by id limit 1 offset 0) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id"
	GetLastArticle             = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM (SELECT id, user_id, category_id, article_cover, article_title, article_content, is_top, is_featured, is_delete, status, create_time, update_time FROM t_article where is_delete = 0 and status in (1, 2) order by id desc limit 1 offset 0) a LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id"
	ListArticlesByTagId        = "SELECT a.id AS id, article_cover, article_title, SUBSTR(article_content, 1, 500) AS article_content, is_top, is_featured,c.category_name AS category_Name, status, a.create_time, a.update_time, u.nickname AS nickname, u.avatar AS avatar, u.website AS website FROM t_article a LEFT JOIN t_article_tag at ON a.id = at.article_id LEFT JOIN t_category c ON a.category_id = c.id LEFT JOIN t_user_info u ON a.user_id = u.id where at.tag_id = %d and a.is_delete = 0 and status in (1,2) limit %d offset %d"
	ListArchives               = "SELECT id, article_title, SUBSTR(article_content, 1, 500) AS article_content, create_time FROM t_article where is_delete = 0 and status = 1 order by create_time desc limit %d offset %d"
	CountArticleAdmins         = "SELECT count(DISTINCT a.id) FROM t_article a LEFT JOIN t_article_tag at on a.id = at.article_id %s"
	ListArticlesAdmin          = "SELECT a.id, article_cover, article_title, is_top, is_featured, a.is_delete, a.status, a.type, a.create_time, category_name FROM (select id, article_cover, article_title, is_top, is_featured, is_delete, status, type, create_time, category_id from t_article %s order by is_top DESC, is_featured DESC, id desc limit %d offset %d) a LEFT JOIN t_category c ON a.category_id = c.id order by is_top DESC, is_featured DESC, a.id DESC"
	ArticlesAdminTags          = "SELECT t.id AS tag_id, t.tag_name FROM t_article a LEFT JOIN t_article_tag at ON a.id = at.article_id LEFT JOIN t_tag t ON t.id = at.tag_id WHERE a.id = %d"
	ListArticleStatistics      = "SELECT to_char(create_time, 'YYYY-MM-DD') AS date, COUNT(1) AS count from t_article GROUP BY date ORDER BY date DESC"
	// category
	ListCategories      = "select c.id, c.category_name, COUNT(a.id) AS article_count FROM t_category c LEFT JOIN (SELECT * FROM t_article WHERE is_delete = 0 and status in (1, 2)) a ON c.id = a.category_id GROUP BY c.id"
	ListCategoriesAdmin = "select c.id, c.category_name, count(a.id) as article_count, c.create_time from t_category c LEFT JOIN t_article a ON c.id = a.category_id %s GROUP BY c.id limit %d offset %d"
	// comment
	ListComments                      = "select c.id, c.user_id, u.nickname, u.avatar, u.website, c.comment_content, c.create_time from t_comment c JOIN t_user_info u ON c.user_id = u.id %s ORDER BY c.id DESC limit %d offset %d"
	ListReplies                       = "select * from (select c.id, c.parent_id, c.user_id, u.nickname, u.avatar, u.website, c.reply_user_id, r.nickname AS reply_nickname, r.website AS reply_website, c.comment_content, c.create_time, row_number () over ( PARTITION BY parent_id ORDER BY c.create_time ASC ) row_num from t_comment c JOIN t_user_info u ON c.user_id = u.id JOIN t_user_info r ON c.reply_user_id = r.id WHERE c.is_review = 1 and parent_id IN %s order by c.create_time desc) t "
	ListTopSixComments                = "SELECT c.id, c.user_id, u.nickname, u.avatar, u.website, c.comment_content, c.create_time FROM t_comment c JOIN t_user_info u ON c.user_id = u.id where c.is_review = 1 ORDER BY c.id DESC LIMIT 6 offset 0"
	CountComments                     = "SELECT count(1) from t_comment c LEFT JOIN t_user_info u ON c.user_id = u.id %s"
	ListCommentsAdmin                 = "SELECT c.id, u.avatar, u.nickname, r.nickname AS reply_nickname, a.article_title, c.comment_content, c.type, c.is_review, c.create_time from t_comment c LEFT JOIN t_article a ON c.topic_id = a.id LEFT JOIN t_user_info u ON c.user_id = u.id LEFT JOIN t_user_info r ON c.reply_user_id = r.id %s ORDER BY id DESC limit %d offset %d"
	ListCommentCountByTypeAndTopicIds = "SELECT topic_id as id, COUNT( 1 ) AS comment_count from t_comment WHERE type = %d and topic_id IN %s GROUP BY topic_id"
	ListCommentCountByTypeAndTopicId  = "SELECT topic_id as id, COUNT(1) AS comment_count FROM t_comment WHERE type = %d AND topic_id = %d GROUP BY topic_id"
	// JobLog
	ListJobLogGroups = "select DISTINCT job_group from t_job_log"
	// job
	CountJobs     = "select count(DISTINCT j.id) from t_job j %s"
	ListJobs      = "select * from t_job j %s ORDER BY j.status DESC limit %d offset %d"
	ListJobGroups = "select DISTINCT job_group from t_job"
	// menu
	ListMenusByUserInfoId = "SELECT DISTINCT m.id, name, path, component, icon, order_num, parent_id, is_hidden  FROM t_user_role ur JOIN t_role_menu rm ON ur.role_id = rm.role_id JOIN `t_menu` m ON rm.menu_id = m.id  WHERE user_id = %d"
	// photoAlbum
	ListPhotoAlbumsAdmin = "SELECT pa.id, album_name, album_desc, album_cover, COUNT( a.id ) AS photo_count, status from (SELECT id, album_name, album_desc, album_cover, status from t_photo_album where is_delete = 0 %s ORDER BY id desc limit %d offset %d) pa LEFT JOIN (select id, album_id from t_photo where is_delete = 0) a on pa.id = a.album_id group by  pa.id, album_name, album_desc, album_cover, status"
	// role
	ListResourceRoles     = "select re.id as id, url, request_method from t_resource re where re.parent_id is not null and is_anonymous = 0 ORDER BY id asc"
	ResourceRoles         = "select role_name from t_resource re left join t_role_resource rr on re.id = rr.resource_id left join t_role ro on rr.role_id = ro.id where re.parent_id is not null and is_anonymous = 0 and re.id = %d"
	ListRolesByUserInfoId = "SELECT role_name FROM t_role r LEFT JOIN t_user_role ur ON r.id = ur.role_id WHERE ur.user_id = %d"
	ListRoles             = "select r.id, role_name, r.create_time, r.is_disable from (select id, role_name, create_time, is_disable from t_role %s limit %d offset %d) r ORDER BY r.id"
	ResourceIds           = "select rr.resource_id from (select id, role_name, create_time, is_disable from t_role %s limit %d offset %d) r LEFT JOIN t_role_resource rr ON r.id = rr.role_id where r.id = %d"
	MenuIds               = "select rm.menu_id from (select id, role_name, create_time, is_disable from t_role %s limit %d offset %d) r LEFT JOIN t_role_menu rm on r.id = rm.role_id where r.id = %d"
	// tag
	ListTags                = "SELECT t.id, tag_name, COUNT(aat.article_id) AS count FROM t_tag t LEFT JOIN (SELECT a.id AS article_id, at.tag_id AS tag_id FROM t_article_tag at LEFT JOIN t_article a ON at.article_id = a.id WHERE a.is_delete = 0 AND a.STATUS in (1, 2)) aat ON t.id = aat.tag_id GROUP BY t.id"
	ListTopTenTags          = "SELECT t.id, tag_name, COUNT(aat.article_id) AS count FROM t_tag t LEFT JOIN (SELECT a.id AS article_id, at.tag_id AS tag_id FROM t_article_tag at LEFT JOIN t_article a ON at.article_id = a.id WHERE a.is_delete = 0 AND a.STATUS in (1, 2)) aat ON t.id = aat.tag_id GROUP BY t.id limit 10 offset 0"
	ListTagNamesByArticleId = "SELECT tag_name FROM t_tag t JOIN t_article_tag at ON t.id = at.tag_id WHERE article_id = %d"
	ListTagsAdmin           = "SELECT t.id, tag_name, COUNT( at.article_id ) AS article_count, t.create_time from t_tag t LEFT JOIN t_article_tag at ON t.id = at.tag_id %s GROUP BY t.id limit %d offset %d"
	// talk
	ListTalks        = "SELECT t.id, nickname, avatar, content, images, t.is_top, t.create_time from t_talk t join t_user_info ui on t.user_id = ui.id WHERE t.status = 1 ORDER BY t.is_top DESC, t.id DESC limit %d offset %d"
	GetTalkById      = "SELECT t.id, nickname, avatar, content, images, t.create_time from t_talk t join t_user_info ui on t.user_id = ui.id where t.id = %d and t.status = 1"
	ListTalksAdmin   = "SELECT t.id, nickname, avatar, content, images, t.is_top, t.status, t.create_time from t_talk t JOIN t_user_info ui ON t.user_id = ui.id %s ORDER BY t.is_top DESC, t.id DESC limit %d offset %d"
	GetTalkByIdAdmin = "SELECT t.id, nickname, avatar, content, images, t.is_top, t.status, t.create_time from t_talk t JOIN t_user_info ui ON t.user_id = ui.id WHERE t.id = %d"
	// uniqueview
	ListUniqueViews = "SELECT  to_char(create_time, 'YYYY-MM-DD') as day, views_count FROM t_unique_view WHERE create_time > '%s' AND create_time <= '%s' ORDER BY create_time"
	// userAuth
	ListUsers     = "select ua.id, ua.user_info_id, avatar, nickname, login_type, ip_address, ip_source, ua.create_time, last_login_time, ui.is_disable from (select id, avatar, nickname, is_disable from t_user_info %s limit %d offset %d) ui LEFT JOIN t_user_auth ua ON ua.user_info_id = ui.id"
	RolesByUserId = "select r.id, role_name from (select id, avatar, nickname, is_disable from t_user_info %s limit %d offset %d) ui LEFT JOIN t_user_auth ua ON ua.user_info_id = ui.id LEFT JOIN t_user_role ur ON ui.id = ur.user_id LEFT JOIN t_role r ON ur.role_id = r.id where ua.id = %d"
	CountUser     = "SELECT count(1) FROM t_user_auth ua LEFT JOIN t_user_info ui ON ua.user_info_id = ui.id %s"
)
